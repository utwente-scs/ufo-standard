(cl-comment 'axiom')
(cl-text  axiom74
(forall (x0 x1)
	(if (gufo_ho_categorizes x0 x1)
		(and (gufo_i_Type x0) (not (gufo_t_AbstractIndividualType x0)) (owl_Thing x0) (not (gufo_t_ConcreteIndividualType x0)) (owl_Thing x0)))
	)
)
(cl-comment 'axiom')
(cl-text  axiom102
(forall (x0 x1)
	(if (gufo_ho_categorizes x0 x1)
		(gufo_i_Type x1))
	)
)
(cl-comment 'axiom')
(cl-text  axiom351
(forall (x y)
	(if (gufo_ho_categorizes x y)
		(owl_Thing x))
	)
)
(cl-comment 'axiom')
(cl-text  axiom352
(forall (x y)
	(if (gufo_ho_categorizes x y)
		(owl_Thing y))
	)
)
(cl-comment 'axiom')
(cl-text  axiom109
(forall (x0 x1)
	(if (gufo_ho_partitions x0 x1)
		(gufo_ho_categorizes x0 x1))
	)
)
(cl-comment 'axiom')
(cl-text  axiom349
(forall (x y)
	(if (gufo_ho_partitions x y)
		(owl_Thing x))
	)
)
(cl-comment 'axiom')
(cl-text  axiom350
(forall (x y)
	(if (gufo_ho_partitions x y)
		(owl_Thing y))
	)
)
(cl-comment 'axiom')
(cl-text  axiom379
(forall (x0 x1)
	(if (gufo_ho_partitions x0 x1)
		(and (gufo_i_Type x0) (not (gufo_t_AbstractIndividualType x0)) (owl_Thing x0) (not (gufo_t_ConcreteIndividualType x0)) (owl_Thing x0)))
	)
)
